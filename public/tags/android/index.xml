<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Android on jk jensen</title>
    <link>https://jkjensen.me/tags/android/</link>
    <description>Recent content in Android on jk jensen</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 05 Mar 2019 08:25:52 -0500</lastBuildDate>
    <atom:link href="https://jkjensen.me/tags/android/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>mobile security series part 5: cryptographic storage</title>
      <link>https://jkjensen.me/posts/2019-03-05-android-security-pt-5/</link>
      <pubDate>Tue, 05 Mar 2019 08:25:52 -0500</pubDate>
      <guid>https://jkjensen.me/posts/2019-03-05-android-security-pt-5/</guid>
      <description>&lt;p&gt;&lt;em&gt;This post is the fifth in a series on mobile security where we are exploring the Android platform, how security is approached in a mobile context, and what that means for future mobile platforms like AR and VR. &lt;a href=&#34;https://jkjensen.me/android-security-pt-1&#34;&gt;part 1&lt;/a&gt; &lt;a href=&#34;https://jkjensen.me/android-security-pt-2&#34;&gt;part 2&lt;/a&gt; &lt;a href=&#34;https://jkjensen.me/android-security-pt-3&#34;&gt;part 3&lt;/a&gt; &lt;a href=&#34;https://jkjensen.me/android-security-pt-4&#34;&gt;part 4&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Skip the prose and get to the code via &lt;a href=&#34;https://github.com/azjkjensen/android-encryption-starter&#34;&gt;https://github.com/azjkjensen/android-encryption-starter&lt;/a&gt;{:target=&amp;quot;_blank&amp;quot;}&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Cryptography: you know it&amp;rsquo;s good, hope it happens, pray it works. But dealing with sensitive information is a topic that has been rising in popularity in recent years, and it&amp;rsquo;s important to understand how encryption is used. As we review cryptographic storage in this post, we&amp;rsquo;ll discuss app implementation specifics and end with a full example app that I have open-sourced to help you get started. There just aren&amp;rsquo;t enough resources out there for how to implement data encryption on Android.&lt;/p&gt;</description>
    </item>
    <item>
      <title>mobile security series part 6: device security</title>
      <link>https://jkjensen.me/posts/2019-03-29-android-security-pt-6/</link>
      <pubDate>Tue, 05 Mar 2019 08:25:52 -0500</pubDate>
      <guid>https://jkjensen.me/posts/2019-03-29-android-security-pt-6/</guid>
      <description>&lt;p&gt;&lt;em&gt;This post is the sixth in a series on mobile security where we are exploring the Android platform, how security is approached in a mobile context, and what that means for future mobile platforms like AR and VR. &lt;a href=&#34;https://jkjensen.me/android-security-pt-1&#34;&gt;part 1&lt;/a&gt; &lt;a href=&#34;https://jkjensen.me/android-security-pt-2&#34;&gt;part 2&lt;/a&gt; &lt;a href=&#34;https://jkjensen.me/android-security-pt-3&#34;&gt;part 3&lt;/a&gt; &lt;a href=&#34;https://jkjensen.me/android-security-pt-4&#34;&gt;part 4&lt;/a&gt; &lt;a href=&#34;https://jkjensen.me/android-security-pt-5&#34;&gt;part 5&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;intro&#34;&gt;intro&lt;/h3&gt;&#xA;&lt;p&gt;In the previous posts in this series we&amp;rsquo;ve discussed a slew of security features on Android, mostly focusing on protecting the user from malicious &lt;em&gt;software&lt;/em&gt;.&lt;/p&gt;&#xA;&lt;p&gt;But how is the platform designed to protect the device itself against attacks? This is the question we will answer today.&lt;/p&gt;</description>
    </item>
    <item>
      <title>mobile security series part 3: package management</title>
      <link>https://jkjensen.me/posts/2019-02-05-android-security-pt-3/</link>
      <pubDate>Tue, 05 Feb 2019 08:25:52 -0500</pubDate>
      <guid>https://jkjensen.me/posts/2019-02-05-android-security-pt-3/</guid>
      <description>&lt;p&gt;&lt;em&gt;This post is the third in a series on mobile security where we are exploring the Android platform, how security is approached in a mobile context, and what that means for future mobile platforms like AR and VR. &lt;a href=&#34;https://jkjensen.me/android-security-pt-1&#34;&gt;part 1&lt;/a&gt; &lt;a href=&#34;https://jkjensen.me/android-security-pt-2&#34;&gt;part 2&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;Lately I&amp;rsquo;ve been spending a lot of time seeking to understand Android at a lower level to drive the research I am doing on privacy and security in augmented reality. In the last week I&amp;rsquo;ve bricked and revived devices more times than I can count. In the process I&amp;rsquo;ve been studying up on this post&amp;rsquo;s topic &amp;ndash; package management &amp;ndash; and the two have worked in tandem to drive my understanding of Android as a system and framework. As a result, I will try to bring a more practical approach to how these system-level components affect Android developers. We will begin by seeking to understand the elusive APK and how it is packaged.&lt;/p&gt;</description>
    </item>
    <item>
      <title>mobile security series part 4: network security</title>
      <link>https://jkjensen.me/posts/2019-02-21-android-security-pt-4/</link>
      <pubDate>Tue, 05 Feb 2019 08:25:52 -0500</pubDate>
      <guid>https://jkjensen.me/posts/2019-02-21-android-security-pt-4/</guid>
      <description>&lt;p&gt;&lt;em&gt;This post is the fourth in a series on mobile security where we are exploring the Android platform, how security is approached in a mobile context, and what that means for future mobile platforms like AR and VR. &lt;a href=&#34;https://jkjensen.me/android-security-pt-1&#34;&gt;part 1&lt;/a&gt; &lt;a href=&#34;https://jkjensen.me/android-security-pt-2&#34;&gt;part 2&lt;/a&gt; &lt;a href=&#34;https://jkjensen.me/android-security-pt-3&#34;&gt;part 3&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;Network security is an enormous and ever-changing field, but some things have remained effectively constant for a while now. Except for the threat that quantum computing poses to it, high-complexity encryption has consistently been shown to protect sensitive data from prying eyes. This, for our purposes, is how Android manages network security. The mobile system is able to provide network protection through public key infrastructure (&lt;a href=&#34;https://en.wikipedia.org/wiki/Public_key_infrastructure&#34;&gt;PKI&lt;/a&gt;).&lt;/p&gt;</description>
    </item>
    <item>
      <title>mobile security series part 2: permissions</title>
      <link>https://jkjensen.me/posts/2019-01-23-android-security-pt-2/</link>
      <pubDate>Wed, 23 Jan 2019 08:25:52 -0500</pubDate>
      <guid>https://jkjensen.me/posts/2019-01-23-android-security-pt-2/</guid>
      <description>&lt;p&gt;&lt;em&gt;This post is the second part of a series on mobile security where we will explore the Android platform, how security is approached in a mobile context, and what that means for future mobile platforms like AR and VR. &lt;a href=&#34;https://jkjensen.me/android-security-pt-1&#34;&gt;part 1&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;Permissions are a fundamental part of any computer system&amp;rsquo;s security model and mobile systems are no exception. We briefly addressed them briefly in the &lt;a href=&#34;https://jkjensen.me/android-security-pt-1&#34;&gt;last post on architecture&lt;/a&gt;, but here we will go into detail on what permissions are and how they are enforced. We will explore how this affects both system and application development. Digging deep into the mobile permissions model allows us to gain intuition for the interaction between different parts of the operating system, and in particular how Android is designed to protect against attacks.&lt;/p&gt;</description>
    </item>
    <item>
      <title>mobile security series part 1: the android platform</title>
      <link>https://jkjensen.me/posts/2019-01-14-android-security-pt-1/</link>
      <pubDate>Mon, 07 Jan 2019 14:25:52 -0500</pubDate>
      <guid>https://jkjensen.me/posts/2019-01-14-android-security-pt-1/</guid>
      <description>&lt;p&gt;&lt;em&gt;This post is the first part of a new series on mobile security where we will explore the Android platform, how security is approached in a mobile context, and what that means for future mobile platforms like AR and VR.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;android-architecture&#34;&gt;android architecture&lt;/h1&gt;&#xA;&lt;p&gt;In order to understand mobile security one must become familiar with the mobile platform itself. We will start at the lowest level and review the form and function of each section of the platform. The diagram below shows the architecture of Android, with the lowest level components at the bottom.&lt;/p&gt;</description>
    </item>
    <item>
      <title>take pride in a conglomeration of work</title>
      <link>https://jkjensen.me/posts/2018-12-19-take-pride-in-a-conglomeration-of-work/</link>
      <pubDate>Thu, 08 Nov 2018 14:25:52 -0500</pubDate>
      <guid>https://jkjensen.me/posts/2018-12-19-take-pride-in-a-conglomeration-of-work/</guid>
      <description>&lt;p&gt;The saying goes something like &amp;ldquo;jack of all trades, master of none&amp;rdquo; right?&lt;/p&gt;&#xA;&lt;p&gt;There is something to be said about people who dig deep into a single&#xA;problem and spend their entire life&amp;rsquo;s work focused there. Just look at&#xA;people like &lt;a href=&#34;&#34;&gt;Stephen Hawking&lt;/a&gt;{:target=&amp;quot;_blank&amp;quot;}. His life was his craft, and he was and continues to be richly rewarded for persistence and intelligence. Hawking left behind a legacy that is simultaneously unbelievable and inspiring. But in today&amp;rsquo;s world the odds are against you achieving hyper-success by one-track-mindedness.&lt;/p&gt;</description>
    </item>
    <item>
      <title>using the NewInstance pattern in kotlin</title>
      <link>https://jkjensen.me/posts/2018-04-15-using-the-newinstance-pattern-in-kotlin/</link>
      <pubDate>Thu, 05 Apr 2018 14:25:52 -0500</pubDate>
      <guid>https://jkjensen.me/posts/2018-04-15-using-the-newinstance-pattern-in-kotlin/</guid>
      <description>&lt;p&gt;Kotlin has a handful of fundamental differences from Java, not the least of which being the omission of static members and methods. This can cause a bit of a headache when trying to duplicate typical Android patterns using Android’s &lt;a href=&#34;https://developer.android.com/kotlin/index.html&#34;&gt;newest official language&lt;/a&gt;{:target=&amp;quot;_blank&amp;quot;}.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Skip the prose and get to the code via this &lt;a href=&#34;https://gist.github.com/azjkjensen/cf094c79726bab08b68f01dcc2e82a71#file-myfragment-kt&#34;&gt;Github gist&lt;/a&gt;{:target=&amp;quot;_blank&amp;quot;}.&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;java-example&#34;&gt;Java Example&lt;/h2&gt;&#xA;&lt;p&gt;In Java Android development it is common to add a static method called newInstance() to a fragment class like this:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
